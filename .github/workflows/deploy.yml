name: deploy

on:
  workflow_run:
    workflows: [ "build" ]
    branches: [ "main" ]
    types:
      - completed

env:
  CDK_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
  CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
  ZANA_ENV: prod

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
        # Setup Rust, Cargo Lambda, Zig, NodeJS and AWS CDK
      - uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install Zig toolchain
        uses: korandoru/setup-zig@v1
        with:
          zig-version: 0.10.0
      - name: Install Cargo Lambda
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: cargo-lambda/cargo-lambda
          tag: v0.19.0
          platform: linux
          arch: x86_64
      - name: Install Node.js toolchain
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install -g aws-cdk@2.67.0
        # Build zana_lambda code
      - name: Build zana_lambda service
        working-directory: services/zana_lambda
        run: cargo lambda build --release --output-format zip --verbose
        # Deploy to AWS
      - name: Configure aws credentials
        permissions:
          id-token: write
          contents: read
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: ${{ secrets.AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Deploy to AWS
        permissions:
          id-token: write
          contents: read
        working-directory: deployment/zana_aws
        run: cdk deploy --require-approval never
